{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arda\\\\Desktop\\\\Adrabob\\\\JAVA, Spring Boot\\\\Spring Boot\\\\Projects\\\\quest-app\\\\src\\\\components\\\\Post\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactDOM } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [postList, setPostList] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost8080/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setPostList(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: postList.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [post.title, post.text]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Post, \"H4YLgqKE4ziVJ/DiQo+X9quRNzE=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","Post","_s","error","setError","isLoaded","setIsLoaded","postList","setPostList","fetch","then","res","json","result","children","message","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","text","id","_c","$RefreshReg$"],"sources":["C:/Users/Arda/Desktop/Adrabob/JAVA, Spring Boot/Spring Boot/Projects/quest-app/src/components/Post/Post.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { ReactDOM } from 'react';\r\n\r\nfunction Post() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [postList, setPostList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost8080/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setPostList(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, []);\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <ul>\r\n                {postList.map(post => (\r\n                    <li key={post.id}>\r\n                        {post.title}\r\n                        {post.text}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,4BAA4B,CAAC,CAC9BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACAG,MAAM,IAAK;MACRP,WAAW,CAAC,IAAI,CAAC;MACjBE,WAAW,CAACK,MAAM,CAAC;IACvB,CAAC,EACAV,KAAK,IAAK;MACPG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACnB,CACJ,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE;IACP,oBAAOH,OAAA;MAAAc,QAAA,GAAK,SAAO,EAACX,KAAK,CAACY,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC5C,CAAC,MAAM,IAAI,CAACd,QAAQ,EAAE;IAClB,oBAAOL,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC,CAAC,MAAM;IACH,oBACInB,OAAA;MAAAc,QAAA,EACKP,QAAQ,CAACa,GAAG,CAACC,IAAI,iBACdrB,OAAA;QAAAc,QAAA,GACKO,IAAI,CAACC,KAAK,EACVD,IAAI,CAACE,IAAI;MAAA,GAFLF,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEb;AACJ;AAACjB,EAAA,CApCQD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}