{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arda\\\\Desktop\\\\Adrabob\\\\JAVA, Spring Boot\\\\Spring Boot\\\\Projects\\\\quest-app\\\\src\\\\components\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"../Post/Post\";\nimport './Home.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [postList, setPostList] = useState([]);\n  useEffect(() => {\n    fetch(\"/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setPostList(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), postList.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        text: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Home, \"H4YLgqKE4ziVJ/DiQo+X9quRNzE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","Home","_s","error","setError","isLoaded","setIsLoaded","postList","setPostList","fetch","then","res","json","result","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","title","text","_c","$RefreshReg$"],"sources":["C:/Users/Arda/Desktop/Adrabob/JAVA, Spring Boot/Spring Boot/Projects/quest-app/src/components/Home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport './Home.scss';\r\n\r\nfunction Home() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [postList, setPostList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setPostList(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, []);\r\n\r\n    if (error) {\r\n        return <div>Error!!!</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n            <h1>Home</h1>\r\n                {postList.map(post => (\r\n                    <Post title={post.title} text={post.text}></Post> \r\n                     \r\n                ))}\r\n                </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZa,KAAK,CAAC,QAAQ,CAAC,CACVC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACAG,MAAM,IAAK;MACRP,WAAW,CAAC,IAAI,CAAC;MACjBE,WAAW,CAACK,MAAM,CAAC;IACvB,CAAC,EACAV,KAAK,IAAK;MACPG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACnB,CACJ,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE;IACP,oBAAOH,OAAA;MAAAc,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B,CAAC,MAAM,IAAI,CAACb,QAAQ,EAAE;IAClB,oBAAOL,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC,CAAC,MAAM;IACH,oBACIlB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAL,QAAA,gBAC1Bd,OAAA;QAAAc,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACRX,QAAQ,CAACa,GAAG,CAACC,IAAI,iBACdrB,OAAA,CAACF,IAAI;QAACwB,KAAK,EAAED,IAAI,CAACC,KAAM;QAACC,IAAI,EAAEF,IAAI,CAACE;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAEnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAElB;AAGJ;AAAChB,EAAA,CAtCQD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}